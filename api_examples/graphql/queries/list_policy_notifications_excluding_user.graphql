# Description
# -----------
#
# Query will return all policy notifications for the last day and will filter out any notification triggered by a
# particular user.
#

# Substitute
# ----------
#
# Substitute real values for the token <actor_indentity_id>.
#
# <actor_indentity_id>:
#   Any valid actor identity id can be substituted.
#   To get actor identity id for a user, please see GraphQL example:
#     `get_user_actor_identity_id.graphql`.
#   To get the actor identity id for Turbot identity, please see GraphQL example:
#     `get_turbot_actor_identity_id.graphql.graphql`.
#

# Execute
# -------
#
# To execute the query after substitution, run the Turbot CLI command:
#   `turbot graphql --query ./list_policy_notifications_excluding_user.graphql`
#

# Use Cases
# ---------
#
#   Excluding the user Turbot Identity
#   ----------------------------------
#     1. Get the actor identity id for Turbot identity by running GraphQL example: `get_turbot_actor_identity_id.graphql`.
#     2. Replace `<actor_indentity_id>` with this value.
#     3. Excute this GraphQL script
#
#   Excluding a particular user
#   ---------------------------
#     1. Get the actor identity id for Turbot identity by running GraphQL example: `get_user_actor_identity_id.graphql`.
#     2. Replace `<actor_indentity_id>` with this value.
#     3. Excute this GraphQL script
#

# Documentation
# -------------
#
# For full documentation see:
#   - Filter documentation: https://turbot.com/v5/docs/reference/filter
#   - GraphQL notifications: https://turbot.com/v5/docs/reference/filter/notifications
#   - GraphQL notifications type: https://turbot.com/v5/docs/concepts/notifications#notification-types
#

query ListPolicyNotificationsExcludingUser {
  notifications(
    filter: "actorIdentityId:-<actor_indentity_id> notificationType:policy_setting_created,policy_setting_updated,policy_setting_deleted timestamp:>T-1d"
  ) {
    items {
      notificationType
      actor {
        identity {
          title
        }
      }
      resource {
        turbot {
          title
          createTimestamp
          actorIdentityId
          akas
        }
      }
      policySetting {
        actor {
          identity {
            title
          }
        }
        value
      }
    }

    metadata {
      stats {
        total
      }
    }
  }
}
