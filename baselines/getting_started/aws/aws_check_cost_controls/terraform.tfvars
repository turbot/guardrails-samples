# List of services and resources to be Check: Active.
# Started with a few resource types to get started aligned with the initial mods installed
# You can remove the comment per row to include the resource type.  Make sure you have the related service mod installed

# Acceptable Values:
  # "Skip"
  # "Check: Active"
  # "Enforce: Delete inactive with 1 day warning"
  # "Enforce: Delete inactive with 3 days warning"
  # "Enforce: Delete inactive with 7 days warning"
  # "Enforce: Delete inactive with 14 days warning"
  # "Enforce: Delete inactive with 30 days warning"
  # "Enforce: Delete inactive with 60 days warning"
  # "Enforce: Delete inactive with 90 days warning"
  # "Enforce: Delete inactive with 180 days warning"
  # "Enforce: Delete inactive with 365 days warning"


resource_active = { 
    # aws-acm-certificate                           = "Check: Active"
    # aws-mq-broker                                 = "Check: Active"
    # aws-mq-configuration                          = "Check: Active"
    # aws-amplify-app                               = "Check: Active"
    # aws-apigateway-api                            = "Check: Active"
    # aws-apigateway-apiKey                         = "Check: Active"
    # aws-apigateway-apiV2                          = "Check: Active"
    # aws-apigateway-authorizer                     = "Check: Active"
    # aws-apigateway-authorizerV2                   = "Check: Active"
    # aws-apigateway-domainNameV2                   = "Check: Active"
    # aws-apigateway-stage                          = "Check: Active"
    # aws-apigateway-stageV2                        = "Check: Active"
    # aws-apigateway-usagePlan                      = "Check: Active"
    # aws-appmesh-mesh                              = "Check: Active"
    # aws-athena-namedQuery                         = "Check: Active"
    # aws-athena-workgroup                          = "Check: Active"
    # aws-backup-backupPlan                         = "Check: Active"
    # aws-backup-backupVault                        = "Check: Active"
    # aws-batch-jobDefinition                       = "Check: Active"
    # aws-cloudformation-stack                      = "Check: Active"
    # aws-cloudformation-stackSet                   = "Check: Active"
    # aws-cloudfront-cloudFrontOriginAccessIdentity = "Check: Active"
    # aws-cloudfront-distribution                   = "Check: Active"
    # aws-cloudfront-streamingDistribution          = "Check: Active"
    # aws-cloudsearch-domain                        = "Check: Active"
    # aws-cloudtrail-trail                          = "Check: Active"
    # aws-cloudwatch-alarm                          = "Check: Active"
    # aws-codebuild-build                           = "Check: Active"
    # aws-codebuild-project                         = "Check: Active"
    # aws-codecommit-repository                     = "Check: Active"
    # aws-config-configurationRecorder              = "Check: Active"
    # aws-config-deliveryChannel                    = "Check: Active"
    # aws-config-rule                               = "Check: Active"
    # aws-dax-cluster                               = "Check: Active"
    # aws-directoryservice-directory                = "Check: Active"
    # aws-dms-endpoint                              = "Check: Active"
    # aws-docdb-dbCluster                           = "Check: Active"
    # aws-docdb-dbClusterParameterGroup             = "Check: Active"
    # aws-docdb-dbInstance                          = "Check: Active"
    # aws-dynamodb-backup                           = "Check: Active"
    # aws-dynamodb-globalTable                      = "Check: Active"
    # aws-dynamodb-table                            = "Check: Active"
    aws-ec2-ami                                   = "Check: Active"
    # aws-ec2-applicationLoadBalancer               = "Check: Active"
    # aws-ec2-autoScalingGroup                      = "Check: Active"
    # aws-ec2-classicLoadBalancer                   = "Check: Active"
    aws-ec2-instance                              = "Check: Active"
    # aws-ec2-keyPair                               = "Check: Active"
    # aws-ec2-launchConfiguration                   = "Check: Active"
    # aws-ec2-launchTemplate                        = "Check: Active"
    # aws-ec2-launchTemplateVersion                 = "Check: Active"
    # aws-ec2-listenerRule                          = "Check: Active"
    # aws-ec2-loadBalancerListener                  = "Check: Active"
    # aws-ec2-networkInterface                      = "Check: Active"
    # aws-ec2-networkLoadBalancer                   = "Check: Active"
    aws-ec2-snapshot                              = "Check: Active"
    # aws-ec2-targetGroup                           = "Check: Active"
    ##Have Unattached Policy Set instead## aws-ec2-volume                                = "Check: Active"
    # aws-ecr-repository                            = "Check: Active"
    # aws-ecs-cluster                               = "Check: Active"
    # aws-ecs-containerInstance                     = "Check: Active"
    # aws-ecs-taskDefinition                        = "Check: Active"
    # aws-efs-fileSystem                            = "Check: Active"
    # aws-efs-mountTarget                           = "Check: Active"
    # aws-eks-cluster                               = "Check: Active"
    # aws-eks-nodeGroup                             = "Check: Active"
    # aws-elasticbeanstalk-application              = "Check: Active"
    # aws-elasticbeanstalk-environment              = "Check: Active"
    # aws-elasticache-cacheCluster                  = "Check: Active"
    # aws-elasticache-cacheParameterGroup           = "Check: Active"
    # aws-elasticache-replicationGroup              = "Check: Active"
    # aws-elasticache-snapshot                      = "Check: Active"
    # aws-elasticsearch-domain                      = "Check: Active"
    # aws-emr-cluster                               = "Check: Active"
    # aws-emr-securityConfiguration                 = "Check: Active"
    # aws-events-rule                               = "Check: Active"
    # aws-events-target                             = "Check: Active"
    # aws-fsx-backup                                = "Check: Active"
    # aws-fsx-fileSystem                            = "Check: Active"
    # aws-glacier-vault                             = "Check: Active"
    # aws-glue-database                             = "Check: Active"
    # aws-guardduty-detector                        = "Check: Active"
    # aws-guardduty-ipSet                           = "Check: Active"
    # aws-guardduty-threatIntelSet                  = "Check: Active"
    # aws-iam-accessKey                             = "Check: Active"
    # aws-iam-group                                 = "Check: Active"
    # aws-iam-iamPolicy                             = "Check: Active"
    # aws-iam-role                                  = "Check: Active"
    # aws-iam-user                                  = "Check: Active"
    # aws-inspector-assessmentTarget                = "Check: Active"
    # aws-inspector-assessmentTemplate              = "Check: Active"
    # aws-kinesis-consumer                          = "Check: Active"
    # aws-kinesis-stream                            = "Check: Active"
    # aws-kms-key                                   = "Check: Active"
    aws-lambda-function                           = "Check: Active"
    # aws-logs-logGroup                             = "Check: Active"
    # aws-logs-logStream                            = "Check: Active"
    # aws-logs-metricFilter                         = "Check: Active"
    # aws-msk-cluster                               = "Check: Active"
    # aws-neptune-dbCluster                         = "Check: Active"
    # aws-neptune-dbInstance                        = "Check: Active"
    # aws-qldb-ledger                               = "Check: Active"
    # aws-rds-dbCluster                             = "Check: Active"
    # aws-rds-dbClusterParameterGroup               = "Check: Active"
    # aws-rds-dbClusterSnapshotManual               = "Check: Active"
    # aws-rds-dbInstance                            = "Check: Active"
    # aws-rds-dbParameterGroup                      = "Check: Active"
    # aws-rds-dbSnapshotManual                      = "Check: Active"
    # aws-rds-optionGroup                           = "Check: Active"
    # aws-rds-subnetGroup                           = "Check: Active"
    # aws-redshift-cluster                          = "Check: Active"
    # aws-redshift-clusterParameterGroup            = "Check: Active"
    # aws-redshift-clusterSubnetGroup               = "Check: Active"
    # aws-redshift-clusterSnapshotManual            = "Check: Active"
    # aws-robomaker-fleet                           = "Check: Active"
    # aws-robomaker-robot                           = "Check: Active"
    # aws-robomaker-robotApplication                = "Check: Active"
    # aws-route53-hostedZone                        = "Check: Active"
    # aws-route53resolver-resolverEndpoint          = "Check: Active"
    # aws-route53resolver-resolverRule              = "Check: Active"
    aws-s3-bucket                                 = "Check: Active"
    # aws-secretsmanager-secret                     = "Check: Active"
    # aws-shield-protection                         = "Check: Active"
    # aws-sns-subscription                          = "Check: Active"
    # aws-sns-topic                                 = "Check: Active"
    # aws-sqs-queue                                 = "Check: Active"
    # aws-ssm-association                           = "Check: Active"
    # aws-ssm-document                              = "Check: Active"
    # aws-ssm-maintenanceWindow                     = "Check: Active"
    # aws-ssm-ssmParameter                          = "Check: Active"
    # aws-stepfunctions-stateMachine                = "Check: Active"
    # aws-swf-domain                                = "Check: Active"
    # aws-vpc-connect-customerGateway               = "Check: Active"
    # aws-vpc-core-dhcpOptions                      = "Check: Active"
    # aws-vpc-internet-egressOnlyInternetGateway    = "Check: Active"
    # aws-vpc-internet-elasticIp                    = "Check: Active"
    # aws-vpc-internet-vpcEndpoint                  = "Check: Active"
    # aws-vpc-internet-vpcEndpointService           = "Check: Active"
    # aws-vpc-security-flowLog                      = "Check: Active"
    # aws-vpc-internet-internetGateway              = "Check: Active"
    # aws-vpc-internet-natGateway                   = "Check: Active"
    # aws-vpc-security-networkAcl                   = "Check: Active"
    # aws-vpc-connect-vpcPeeringConnection          = "Check: Active"
    # aws-vpc-core-routeTable                       = "Check: Active"
    # aws-vpc-security-securityGroup                = "Check: Active"
    # aws-vpc-core-subnet                           = "Check: Active"
    # aws-vpc-connect-transitGateway                = "Check: Active"
    # aws-vpc-connect-transitGatewayRouteTable      = "Check: Active"
    # aws-vpc-core-vpc                              = "Check: Active"
    # aws-vpc-connect-vpnConnection                 = "Check: Active"
    # aws-vpc-connect-vpnGateway                    = "Check: Active"
    # aws-waf-ipSet                                 = "Check: Active"
    # aws-waf-ipSetV2Global                         = "Check: Active"
    # aws-waf-ipSetV2Regional                       = "Check: Active"
    # aws-waf-rateBasedRule                         = "Check: Active"
    # aws-waf-regexPatternSetV2Global               = "Check: Active"
    # aws-waf-regexPatternSetV2Regional             = "Check: Active"
    # aws-waf-rule                                  = "Check: Active"
    # aws-waf-ruleGroupV2Global                     = "Check: Active"
    # aws-waf-ruleGroupV2Regional                   = "Check: Active"
    # aws-waf-webacl                                = "Check: Active"
    # aws-waf-webAclV2Global                        = "Check: Active"
    # aws-waf-webAclV2Regional                      = "Check: Active"
    # aws-wafregional-rule                          = "Check: Active"
    # aws-wellarchitected-workload                  = "Check: Active"
}

# Note: the resource map above dictates the applicable use of each line item below.  You do not need to comment out these items to reduce scope
policy_map = {
    aws-acm-certificate                           = "tmod:@turbot/aws-acm#/policy/types/certificateActive"
    aws-mq-broker                                 = "tmod:@turbot/aws-mq#/policy/types/brokerActive"
    aws-mq-configuration                          = "tmod:@turbot/aws-mq#/policy/types/configurationActive"
    aws-amplify-app                               = "tmod:@turbot/aws-amplify#/policy/types/appActive"
    aws-apigateway-api                            = "tmod:@turbot/aws-apigateway#/policy/types/apiActive"
    aws-apigateway-apiKey                         = "tmod:@turbot/aws-apigateway#/policy/types/apiKeyActive"
    aws-apigateway-apiV2                          = "tmod:@turbot/aws-apigateway#/policy/types/apiV2Active"
    aws-apigateway-authorizer                     = "tmod:@turbot/aws-apigateway#/policy/types/authorizerActive"
    aws-apigateway-authorizerV2                   = "tmod:@turbot/aws-apigateway#/policy/types/authorizerV2Active"
    aws-apigateway-domainNameV2                   = "tmod:@turbot/aws-apigateway#/policy/types/domainNameV2Active"
    aws-apigateway-stage                          = "tmod:@turbot/aws-apigateway#/policy/types/stageActive"
    aws-apigateway-stageV2                        = "tmod:@turbot/aws-apigateway#/policy/types/stageV2Active"
    aws-apigateway-usagePlan                      = "tmod:@turbot/aws-apigateway#/policy/types/usagePlanActive"
    aws-appmesh-mesh                              = "tmod:@turbot/aws-appmesh#/policy/types/meshActive"
    aws-athena-namedQuery                         = "tmod:@turbot/aws-athena#/policy/types/namedQueryActive"
    aws-athena-workgroup                          = "tmod:@turbot/aws-athena#/policy/types/workgroupActive"
    aws-backup-backupPlan                         = "tmod:@turbot/aws-backup#/policy/types/backupPlanActive"
    aws-backup-backupVault                        = "tmod:@turbot/aws-backup#/policy/types/backupVaultActive"
    aws-batch-jobDefinition                       = "tmod:@turbot/aws-batch#/policy/types/jobDefinitionActive"
    aws-cloudformation-stack                      = "tmod:@turbot/aws-cloudformation#/policy/types/stackActive"
    aws-cloudformation-stackSet                   = "tmod:@turbot/aws-cloudformation#/policy/types/stackSetActive"
    aws-cloudfront-cloudFrontOriginAccessIdentity = "tmod:@turbot/aws-cloudfront#/policy/types/cloudFrontOriginAccessIdentityActive"
    aws-cloudfront-distribution                   = "tmod:@turbot/aws-cloudfront#/policy/types/distributionActive"
    aws-cloudfront-streamingDistribution          = "tmod:@turbot/aws-cloudfront#/policy/types/streamingDistributionActive"
    aws-cloudsearch-domain                        = "tmod:@turbot/aws-cloudsearch#/policy/types/domainActive"
    aws-cloudtrail-trail                          = "tmod:@turbot/aws-cloudtrail#/policy/types/trailActive"
    aws-cloudwatch-alarm                          = "tmod:@turbot/aws-cloudwatch#/policy/types/alarmActive"
    aws-codebuild-build                           = "tmod:@turbot/aws-codebuild#/policy/types/buildActive"
    aws-codebuild-project                         = "tmod:@turbot/aws-codebuild#/policy/types/projectActive"
    aws-codecommit-repository                     = "tmod:@turbot/aws-codecommit#/policy/types/repositoryActive"
    aws-config-configurationRecorder              = "tmod:@turbot/aws-config#/policy/types/configurationRecorderActive"
    aws-config-deliveryChannel                    = "tmod:@turbot/aws-config#/policy/types/deliveryChannelActive"
    aws-config-rule                               = "tmod:@turbot/aws-config#/policy/types/ruleActive"
    aws-dax-cluster                               = "tmod:@turbot/aws-dax#/policy/types/clusterActive"
    aws-directoryservice-directory                = "tmod:@turbot/aws-directoryservice#/policy/types/directoryActive"
    aws-dms-endpoint                              = "tmod:@turbot/aws-dms#/policy/types/endpointActive"
    aws-docdb-dbCluster                           = "tmod:@turbot/aws-docdb#/policy/types/dbClusterActive"
    aws-docdb-dbClusterParameterGroup             = "tmod:@turbot/aws-docdb#/policy/types/dbClusterParameterGroupActive"
    aws-docdb-dbInstance                          = "tmod:@turbot/aws-docdb#/policy/types/dbInstanceActive"
    aws-dynamodb-backup                           = "tmod:@turbot/aws-dynamodb#/policy/types/backupActive"
    aws-dynamodb-globalTable                      = "tmod:@turbot/aws-dynamodb#/policy/types/globalTableActive"
    aws-dynamodb-table                            = "tmod:@turbot/aws-dynamodb#/policy/types/tableActive"
    aws-ec2-ami                                   = "tmod:@turbot/aws-ec2#/policy/types/amiActive"
    aws-ec2-applicationLoadBalancer               = "tmod:@turbot/aws-ec2#/policy/types/applicationLoadBalancerActive"
    aws-ec2-autoScalingGroup                      = "tmod:@turbot/aws-ec2#/policy/types/autoScalingGroupActive"
    aws-ec2-classicLoadBalancer                   = "tmod:@turbot/aws-ec2#/policy/types/classicLoadBalancerActive"
    aws-ec2-instance                              = "tmod:@turbot/aws-ec2#/policy/types/instanceActive"
    aws-ec2-keyPair                               = "tmod:@turbot/aws-ec2#/policy/types/keyPairActive"
    aws-ec2-launchConfiguration                   = "tmod:@turbot/aws-ec2#/policy/types/launchConfigurationActive"
    aws-ec2-launchTemplate                        = "tmod:@turbot/aws-ec2#/policy/types/launchTemplateActive"
    aws-ec2-launchTemplateVersion                 = "tmod:@turbot/aws-ec2#/policy/types/launchTemplateVersionActive"
    aws-ec2-listenerRule                          = "tmod:@turbot/aws-ec2#/policy/types/listenerRuleActive"
    aws-ec2-loadBalancerListener                  = "tmod:@turbot/aws-ec2#/policy/types/loadBalancerListenerActive"
    aws-ec2-networkInterface                      = "tmod:@turbot/aws-ec2#/policy/types/networkInterfaceActive"
    aws-ec2-networkLoadBalancer                   = "tmod:@turbot/aws-ec2#/policy/types/networkLoadBalancerActive"
    aws-ec2-snapshot                              = "tmod:@turbot/aws-ec2#/policy/types/snapshotActive"
    aws-ec2-targetGroup                           = "tmod:@turbot/aws-ec2#/policy/types/targetGroupActive"
    aws-ec2-volume                                = "tmod:@turbot/aws-ec2#/policy/types/volumeActive"
    aws-ecr-repository                            = "tmod:@turbot/aws-ecr#/policy/types/repositoryActive"
    aws-ecs-cluster                               = "tmod:@turbot/aws-ecs#/policy/types/clusterActive"
    aws-ecs-containerInstance                     = "tmod:@turbot/aws-ecs#/policy/types/containerInstanceActive"
    aws-ecs-taskDefinition                        = "tmod:@turbot/aws-ecs#/policy/types/taskDefinitionActive"
    aws-efs-fileSystem                            = "tmod:@turbot/aws-efs#/policy/types/fileSystemActive"
    aws-efs-mountTarget                           = "tmod:@turbot/aws-efs#/policy/types/mountTargetActive"
    aws-eks-cluster                               = "tmod:@turbot/aws-eks#/policy/types/clusterActive"
    aws-eks-nodeGroup                             = "tmod:@turbot/aws-eks#/policy/types/nodeGroupActive"
    aws-elasticbeanstalk-application              = "tmod:@turbot/aws-elasticbeanstalk#/policy/types/applicationActive"
    aws-elasticbeanstalk-environment              = "tmod:@turbot/aws-elasticbeanstalk#/policy/types/environmentActive"
    aws-elasticache-cacheCluster                  = "tmod:@turbot/aws-elasticache#/policy/types/cacheClusterActive"
    aws-elasticache-cacheParameterGroup           = "tmod:@turbot/aws-elasticache#/policy/types/cacheParameterGroupActive"
    aws-elasticache-replicationGroup              = "tmod:@turbot/aws-elasticache#/policy/types/replicationGroupActive"
    aws-elasticache-snapshot                      = "tmod:@turbot/aws-elasticache#/policy/types/snapshotActive"
    aws-elasticsearch-domain                      = "tmod:@turbot/aws-elasticsearch#/policy/types/domainActive"
    aws-emr-cluster                               = "tmod:@turbot/aws-emr#/policy/types/clusterActive"
    aws-emr-securityConfiguration                 = "tmod:@turbot/aws-emr#/policy/types/securityConfigurationActive"
    aws-events-rule                               = "tmod:@turbot/aws-events#/policy/types/ruleActive"
    aws-events-target                             = "tmod:@turbot/aws-events#/policy/types/targetActive"
    aws-fsx-backup                                = "tmod:@turbot/aws-fsx#/policy/types/backupActive"
    aws-fsx-fileSystem                            = "tmod:@turbot/aws-fsx#/policy/types/fileSystemActive"
    aws-glacier-vault                             = "tmod:@turbot/aws-glacier#/policy/types/vaultActive"
    aws-glue-database                             = "tmod:@turbot/aws-glue#/policy/types/databaseActive"
    aws-guardduty-detector                        = "tmod:@turbot/aws-guardduty#/policy/types/detectorActive"
    aws-guardduty-ipSet                           = "tmod:@turbot/aws-guardduty#/policy/types/ipSetActive"
    aws-guardduty-threatIntelSet                  = "tmod:@turbot/aws-guardduty#/policy/types/threatIntelSetActive"
    aws-iam-accessKey                             = "tmod:@turbot/aws-iam#/policy/types/accessKeyActive"
    aws-iam-group                                 = "tmod:@turbot/aws-iam#/policy/types/groupActive"
    aws-iam-iamPolicy                             = "tmod:@turbot/aws-iam#/policy/types/iamPolicyActive"
    aws-iam-role                                  = "tmod:@turbot/aws-iam#/policy/types/roleActive"
    aws-iam-user                                  = "tmod:@turbot/aws-iam#/policy/types/userActive"
    aws-inspector-assessmentTarget                = "tmod:@turbot/aws-inspector#/policy/types/assessmentTargetActive"
    aws-inspector-assessmentTemplate              = "tmod:@turbot/aws-inspector#/policy/types/assessmentTemplateActive"
    aws-kinesis-consumer                          = "tmod:@turbot/aws-kinesis#/policy/types/consumerActive"
    aws-kinesis-stream                            = "tmod:@turbot/aws-kinesis#/policy/types/streamActive"
    aws-kms-key                                   = "tmod:@turbot/aws-kms#/policy/types/keyActive"
    aws-lambda-function                           = "tmod:@turbot/aws-lambda#/policy/types/functionActive"
    aws-logs-logGroup                             = "tmod:@turbot/aws-logs#/policy/types/logGroupActive"
    aws-logs-logStream                            = "tmod:@turbot/aws-logs#/policy/types/logStreamActive"
    aws-logs-metricFilter                         = "tmod:@turbot/aws-logs#/policy/types/metricFilterActive"
    aws-msk-cluster                               = "tmod:@turbot/aws-msk#/policy/types/clusterActive"
    aws-neptune-dbCluster                         = "tmod:@turbot/aws-neptune#/policy/types/dbClusterActive"
    aws-neptune-dbInstance                        = "tmod:@turbot/aws-neptune#/policy/types/dbInstanceActive"
    aws-qldb-ledger                               = "tmod:@turbot/aws-qldb#/policy/types/ledgerActive"
    aws-rds-dbCluster                             = "tmod:@turbot/aws-rds#/policy/types/dbClusterActive"
    aws-rds-dbClusterParameterGroup               = "tmod:@turbot/aws-rds#/policy/types/dbClusterParameterGroupActive"
    aws-rds-dbClusterSnapshotManual               = "tmod:@turbot/aws-rds#/policy/types/dbClusterSnapshotManualActive"
    aws-rds-dbInstance                            = "tmod:@turbot/aws-rds#/policy/types/dbInstanceActive"
    aws-rds-dbParameterGroup                      = "tmod:@turbot/aws-rds#/policy/types/dbParameterGroupActive"
    aws-rds-dbSnapshotManual                      = "tmod:@turbot/aws-rds#/policy/types/dbSnapshotManualActive"
    aws-rds-optionGroup                           = "tmod:@turbot/aws-rds#/policy/types/optionGroupActive"
    aws-rds-subnetGroup                           = "tmod:@turbot/aws-rds#/policy/types/subnetGroupActive"
    aws-redshift-cluster                          = "tmod:@turbot/aws-redshift#/policy/types/clusterActive"
    aws-redshift-clusterParameterGroup            = "tmod:@turbot/aws-redshift#/policy/types/clusterParameterGroupActive"
    aws-redshift-clusterSubnetGroup               = "tmod:@turbot/aws-redshift#/policy/types/clusterSubnetGroupActive"
    aws-redshift-clusterSnapshotManual            = "tmod:@turbot/aws-redshift#/policy/types/clusterSnapshotManualActive"
    aws-robomaker-fleet                           = "tmod:@turbot/aws-robomaker#/policy/types/fleetActive"
    aws-robomaker-robot                           = "tmod:@turbot/aws-robomaker#/policy/types/robotActive"
    aws-robomaker-robotApplication                = "tmod:@turbot/aws-robomaker#/policy/types/robotApplicationActive"
    aws-route53-hostedZone                        = "tmod:@turbot/aws-route53#/policy/types/hostedZoneActive"
    aws-route53resolver-resolverEndpoint          = "tmod:@turbot/aws-route53resolver#/policy/types/resolverEndpointActive"
    aws-route53resolver-resolverRule              = "tmod:@turbot/aws-route53resolver#/policy/types/resolverRuleActive"
    aws-s3-bucket                                 = "tmod:@turbot/aws-s3#/policy/types/bucketActive"
    aws-secretsmanager-secret                     = "tmod:@turbot/aws-secretsmanager#/policy/types/secretActive"
    aws-shield-protection                         = "tmod:@turbot/aws-shield#/policy/types/protectionActive"
    aws-sns-subscription                          = "tmod:@turbot/aws-sns#/policy/types/subscriptionActive"
    aws-sns-topic                                 = "tmod:@turbot/aws-sns#/policy/types/topicActive"
    aws-sqs-queue                                 = "tmod:@turbot/aws-sqs#/policy/types/queueActive"
    aws-ssm-association                           = "tmod:@turbot/aws-ssm#/policy/types/associationActive"
    aws-ssm-document                              = "tmod:@turbot/aws-ssm#/policy/types/documentActive"
    aws-ssm-maintenanceWindow                     = "tmod:@turbot/aws-ssm#/policy/types/maintenanceWindowActive"
    aws-ssm-ssmParameter                          = "tmod:@turbot/aws-ssm#/policy/types/ssmParameterActive"
    aws-stepfunctions-stateMachine                = "tmod:@turbot/aws-stepfunctions#/policy/types/stateMachineActive"
    aws-swf-domain                                = "tmod:@turbot/aws-swf#/policy/types/domainActive"
    aws-vpc-connect-customerGateway               = "tmod:@turbot/aws-vpc-connect#/policy/types/customerGatewayActive"
    aws-vpc-core-dhcpOptions                      = "tmod:@turbot/aws-vpc-core#/policy/types/dhcpOptionsActive"
    aws-vpc-internet-egressOnlyInternetGateway    = "tmod:@turbot/aws-vpc-internet#/policy/types/egressOnlyInternetGatewayActive"
    aws-vpc-internet-elasticIp                    = "tmod:@turbot/aws-vpc-internet#/policy/types/elasticIpActive"
    aws-vpc-internet-vpcEndpoint                  = "tmod:@turbot/aws-vpc-internet#/policy/types/vpcEndpointActive"
    aws-vpc-internet-vpcEndpointService           = "tmod:@turbot/aws-vpc-internet#/policy/types/vpcEndpointServiceActive"
    aws-vpc-security-flowLog                      = "tmod:@turbot/aws-vpc-security#/policy/types/flowLogActive"
    aws-vpc-internet-internetGateway              = "tmod:@turbot/aws-vpc-internet#/policy/types/internetGatewayActive"
    aws-vpc-internet-natGateway                   = "tmod:@turbot/aws-vpc-internet#/policy/types/natGatewayActive"
    aws-vpc-security-networkAcl                   = "tmod:@turbot/aws-vpc-security#/policy/types/networkAclActive"
    aws-vpc-connect-vpcPeeringConnection          = "tmod:@turbot/aws-vpc-connect#/policy/types/vpcPeeringConnectionActive"
    aws-vpc-core-routeTable                       = "tmod:@turbot/aws-vpc-core#/policy/types/routeTableActive"
    aws-vpc-security-securityGroup                = "tmod:@turbot/aws-vpc-security#/policy/types/securityGroupActive"
    aws-vpc-core-subnet                           = "tmod:@turbot/aws-vpc-core#/policy/types/subnetActive"
    aws-vpc-connect-transitGateway                = "tmod:@turbot/aws-vpc-connect#/policy/types/transitGatewayActive"
    aws-vpc-connect-transitGatewayRouteTable      = "tmod:@turbot/aws-vpc-connect#/policy/types/transitGatewayRouteTableActive"
    aws-vpc-core-vpc                              = "tmod:@turbot/aws-vpc-core#/policy/types/vpcActive"
    aws-vpc-connect-vpnConnection                 = "tmod:@turbot/aws-vpc-connect#/policy/types/vpnConnectionActive"
    aws-vpc-connect-vpnGateway                    = "tmod:@turbot/aws-vpc-connect#/policy/types/vpnGatewayActive"
    aws-waf-ipSet                                 = "tmod:@turbot/aws-waf#/policy/types/ipSetActive"
    aws-waf-ipSetV2Global                         = "tmod:@turbot/aws-waf#/policy/types/ipSetV2GlobalActive"
    aws-waf-ipSetV2Regional                       = "tmod:@turbot/aws-waf#/policy/types/ipSetV2RegionalActive"
    aws-waf-rateBasedRule                         = "tmod:@turbot/aws-waf#/policy/types/rateBasedRuleActive"
    aws-waf-regexPatternSetV2Global               = "tmod:@turbot/aws-waf#/policy/types/regexPatternSetV2GlobalActive"
    aws-waf-regexPatternSetV2Regional             = "tmod:@turbot/aws-waf#/policy/types/regexPatternSetV2RegionalActive"
    aws-waf-rule                                  = "tmod:@turbot/aws-waf#/policy/types/ruleActive"
    aws-waf-ruleGroupV2Global                     = "tmod:@turbot/aws-waf#/policy/types/ruleGroupV2GlobalActive"
    aws-waf-ruleGroupV2Regional                   = "tmod:@turbot/aws-waf#/policy/types/ruleGroupV2RegionalActive"
    aws-waf-webacl                                = "tmod:@turbot/aws-waf#/policy/types/webaclActive"
    aws-waf-webAclV2Global                        = "tmod:@turbot/aws-waf#/policy/types/webAclV2GlobalActive"
    aws-waf-webAclV2Regional                      = "tmod:@turbot/aws-waf#/policy/types/webAclV2RegionalActive"
    aws-wafregional-rule                          = "tmod:@turbot/aws-wafregional#/policy/types/ruleActive"
    aws-wellarchitected-workload                  = "tmod:@turbot/aws-wellarchitected#/policy/types/workloadActive"
}

# Note: the resource map above dictates the applicable use of each line item below.  You do not need to comment out these items to reduce scope
policy_map_age = {
    aws-acm-certificate                           = "tmod:@turbot/aws-acm#/policy/types/certificateActiveAge"
    aws-mq-broker                                 = "tmod:@turbot/aws-mq#/policy/types/brokerActiveAge"
    aws-mq-configuration                          = "tmod:@turbot/aws-mq#/policy/types/configurationActiveAge"
    aws-amplify-app                               = "tmod:@turbot/aws-amplify#/policy/types/appActiveAge"
    aws-apigateway-api                            = "tmod:@turbot/aws-apigateway#/policy/types/apiActiveAge"
    aws-apigateway-apiKey                         = "tmod:@turbot/aws-apigateway#/policy/types/apiKeyActiveAge"
    aws-apigateway-apiV2                          = "tmod:@turbot/aws-apigateway#/policy/types/apiV2ActiveAge"
    aws-apigateway-authorizer                     = "tmod:@turbot/aws-apigateway#/policy/types/authorizerActiveAge"
    aws-apigateway-authorizerV2                   = "tmod:@turbot/aws-apigateway#/policy/types/authorizerV2ActiveAge"
    aws-apigateway-domainNameV2                   = "tmod:@turbot/aws-apigateway#/policy/types/domainNameV2ActiveAge"
    aws-apigateway-stage                          = "tmod:@turbot/aws-apigateway#/policy/types/stageActiveAge"
    aws-apigateway-stageV2                        = "tmod:@turbot/aws-apigateway#/policy/types/stageV2ActiveAge"
    aws-apigateway-usagePlan                      = "tmod:@turbot/aws-apigateway#/policy/types/usagePlanActiveAge"
    aws-appmesh-mesh                              = "tmod:@turbot/aws-appmesh#/policy/types/meshActiveAge"
    aws-athena-namedQuery                         = "tmod:@turbot/aws-athena#/policy/types/namedQueryActiveAge"
    aws-athena-workgroup                          = "tmod:@turbot/aws-athena#/policy/types/workgroupActiveAge"
    aws-backup-backupPlan                         = "tmod:@turbot/aws-backup#/policy/types/backupPlanActiveAge"
    aws-backup-backupVault                        = "tmod:@turbot/aws-backup#/policy/types/backupVaultActiveAge"
    aws-batch-jobDefinition                       = "tmod:@turbot/aws-batch#/policy/types/jobDefinitionActiveAge"
    aws-cloudformation-stack                      = "tmod:@turbot/aws-cloudformation#/policy/types/stackActiveAge"
    aws-cloudformation-stackSet                   = "tmod:@turbot/aws-cloudformation#/policy/types/stackSetActiveAge"
    aws-cloudfront-cloudFrontOriginAccessIdentity = "tmod:@turbot/aws-cloudfront#/policy/types/cloudFrontOriginAccessIdentityActiveAge"
    aws-cloudfront-distribution                   = "tmod:@turbot/aws-cloudfront#/policy/types/distributionActiveAge"
    aws-cloudfront-streamingDistribution          = "tmod:@turbot/aws-cloudfront#/policy/types/streamingDistributionActiveAge"
    aws-cloudsearch-domain                        = "tmod:@turbot/aws-cloudsearch#/policy/types/domainActiveAge"
    aws-cloudtrail-trail                          = "tmod:@turbot/aws-cloudtrail#/policy/types/trailActiveAge"
    aws-cloudwatch-alarm                          = "tmod:@turbot/aws-cloudwatch#/policy/types/alarmActiveAge"
    aws-codebuild-build                           = "tmod:@turbot/aws-codebuild#/policy/types/buildActiveAge"
    aws-codebuild-project                         = "tmod:@turbot/aws-codebuild#/policy/types/projectActiveAge"
    aws-codecommit-repository                     = "tmod:@turbot/aws-codecommit#/policy/types/repositoryActiveAge"
    aws-config-configurationRecorder              = "tmod:@turbot/aws-config#/policy/types/configurationRecorderActiveAge"
    aws-config-deliveryChannel                    = "tmod:@turbot/aws-config#/policy/types/deliveryChannelActiveAge"
    aws-config-rule                               = "tmod:@turbot/aws-config#/policy/types/ruleActiveAge"
    aws-dax-cluster                               = "tmod:@turbot/aws-dax#/policy/types/clusterActiveAge"
    aws-directoryservice-directory                = "tmod:@turbot/aws-directoryservice#/policy/types/directoryActiveAge"
    aws-dms-endpoint                              = "tmod:@turbot/aws-dms#/policy/types/endpointActiveAge"
    aws-docdb-dbCluster                           = "tmod:@turbot/aws-docdb#/policy/types/dbClusterActiveAge"
    aws-docdb-dbClusterParameterGroup             = "tmod:@turbot/aws-docdb#/policy/types/dbClusterParameterGroupActiveAge"
    aws-docdb-dbInstance                          = "tmod:@turbot/aws-docdb#/policy/types/dbInstanceActiveAge"
    aws-dynamodb-backup                           = "tmod:@turbot/aws-dynamodb#/policy/types/backupActiveAge"
    aws-dynamodb-globalTable                      = "tmod:@turbot/aws-dynamodb#/policy/types/globalTableActiveAge"
    aws-dynamodb-table                            = "tmod:@turbot/aws-dynamodb#/policy/types/tableActiveAge"
    aws-ec2-ami                                   = "tmod:@turbot/aws-ec2#/policy/types/amiActiveAge"
    aws-ec2-applicationLoadBalancer               = "tmod:@turbot/aws-ec2#/policy/types/applicationLoadBalancerActiveAge"
    aws-ec2-autoScalingGroup                      = "tmod:@turbot/aws-ec2#/policy/types/autoScalingGroupActiveAge"
    aws-ec2-classicLoadBalancer                   = "tmod:@turbot/aws-ec2#/policy/types/classicLoadBalancerActiveAge"
    aws-ec2-instance                              = "tmod:@turbot/aws-ec2#/policy/types/instanceActiveAge"
    aws-ec2-keyPair                               = "tmod:@turbot/aws-ec2#/policy/types/keyPairActiveAge"
    aws-ec2-launchConfiguration                   = "tmod:@turbot/aws-ec2#/policy/types/launchConfigurationActiveAge"
    aws-ec2-launchTemplate                        = "tmod:@turbot/aws-ec2#/policy/types/launchTemplateActiveAge"
    aws-ec2-launchTemplateVersion                 = "tmod:@turbot/aws-ec2#/policy/types/launchTemplateVersionActiveAge"
    aws-ec2-listenerRule                          = "tmod:@turbot/aws-ec2#/policy/types/listenerRuleActiveAge"
    aws-ec2-loadBalancerListener                  = "tmod:@turbot/aws-ec2#/policy/types/loadBalancerListenerActiveAge"
    aws-ec2-networkInterface                      = "tmod:@turbot/aws-ec2#/policy/types/networkInterfaceActiveAge"
    aws-ec2-networkLoadBalancer                   = "tmod:@turbot/aws-ec2#/policy/types/networkLoadBalancerActiveAge"
    aws-ec2-snapshot                              = "tmod:@turbot/aws-ec2#/policy/types/snapshotActiveAge"
    aws-ec2-targetGroup                           = "tmod:@turbot/aws-ec2#/policy/types/targetGroupActiveAge"
    aws-ec2-volume                                = "tmod:@turbot/aws-ec2#/policy/types/volumeActiveAge"
    aws-ecr-repository                            = "tmod:@turbot/aws-ecr#/policy/types/repositoryActiveAge"
    aws-ecs-cluster                               = "tmod:@turbot/aws-ecs#/policy/types/clusterActiveAge"
    aws-ecs-containerInstance                     = "tmod:@turbot/aws-ecs#/policy/types/containerInstanceActiveAge"
    aws-ecs-taskDefinition                        = "tmod:@turbot/aws-ecs#/policy/types/taskDefinitionActiveAge"
    aws-efs-fileSystem                            = "tmod:@turbot/aws-efs#/policy/types/fileSystemActiveAge"
    aws-efs-mountTarget                           = "tmod:@turbot/aws-efs#/policy/types/mountTargetActiveAge"
    aws-eks-cluster                               = "tmod:@turbot/aws-eks#/policy/types/clusterActiveAge"
    aws-eks-nodeGroup                             = "tmod:@turbot/aws-eks#/policy/types/nodeGroupActiveAge"
    aws-elasticbeanstalk-application              = "tmod:@turbot/aws-elasticbeanstalk#/policy/types/applicationActiveAge"
    aws-elasticbeanstalk-environment              = "tmod:@turbot/aws-elasticbeanstalk#/policy/types/environmentActiveAge"
    aws-elasticache-cacheCluster                  = "tmod:@turbot/aws-elasticache#/policy/types/cacheClusterActiveAge"
    aws-elasticache-cacheParameterGroup           = "tmod:@turbot/aws-elasticache#/policy/types/cacheParameterGroupActiveAge"
    aws-elasticache-replicationGroup              = "tmod:@turbot/aws-elasticache#/policy/types/replicationGroupActiveAge"
    aws-elasticache-snapshot                      = "tmod:@turbot/aws-elasticache#/policy/types/snapshotActiveAge"
    aws-elasticsearch-domain                      = "tmod:@turbot/aws-elasticsearch#/policy/types/domainActiveAge"
    aws-emr-cluster                               = "tmod:@turbot/aws-emr#/policy/types/clusterActiveAge"
    aws-emr-securityConfiguration                 = "tmod:@turbot/aws-emr#/policy/types/securityConfigurationActiveAge"
    aws-events-rule                               = "tmod:@turbot/aws-events#/policy/types/ruleActiveAge"
    aws-events-target                             = "tmod:@turbot/aws-events#/policy/types/targetActiveAge"
    aws-fsx-backup                                = "tmod:@turbot/aws-fsx#/policy/types/backupActiveAge"
    aws-fsx-fileSystem                            = "tmod:@turbot/aws-fsx#/policy/types/fileSystemActiveAge"
    aws-glacier-vault                             = "tmod:@turbot/aws-glacier#/policy/types/vaultActiveAge"
    aws-glue-database                             = "tmod:@turbot/aws-glue#/policy/types/databaseActiveAge"
    aws-guardduty-detector                        = "tmod:@turbot/aws-guardduty#/policy/types/detectorActiveAge"
    aws-guardduty-ipSet                           = "tmod:@turbot/aws-guardduty#/policy/types/ipSetActiveAge"
    aws-guardduty-threatIntelSet                  = "tmod:@turbot/aws-guardduty#/policy/types/threatIntelSetActiveAge"
    aws-iam-accessKey                             = "tmod:@turbot/aws-iam#/policy/types/accessKeyActiveAge"
    aws-iam-group                                 = "tmod:@turbot/aws-iam#/policy/types/groupActiveAge"
    aws-iam-iamPolicy                             = "tmod:@turbot/aws-iam#/policy/types/iamPolicyActiveAge"
    aws-iam-role                                  = "tmod:@turbot/aws-iam#/policy/types/roleActiveAge"
    aws-iam-user                                  = "tmod:@turbot/aws-iam#/policy/types/userActiveAge"
    aws-inspector-assessmentTarget                = "tmod:@turbot/aws-inspector#/policy/types/assessmentTargetActiveAge"
    aws-inspector-assessmentTemplate              = "tmod:@turbot/aws-inspector#/policy/types/assessmentTemplateActiveAge"
    aws-kinesis-consumer                          = "tmod:@turbot/aws-kinesis#/policy/types/consumerActiveAge"
    aws-kinesis-stream                            = "tmod:@turbot/aws-kinesis#/policy/types/streamActiveAge"
    aws-kms-key                                   = "tmod:@turbot/aws-kms#/policy/types/keyActiveAge"
    aws-lambda-function                           = "tmod:@turbot/aws-lambda#/policy/types/functionActiveAge"
    aws-logs-logGroup                             = "tmod:@turbot/aws-logs#/policy/types/logGroupActiveAge"
    aws-logs-logStream                            = "tmod:@turbot/aws-logs#/policy/types/logStreamActiveAge"
    aws-logs-metricFilter                         = "tmod:@turbot/aws-logs#/policy/types/metricFilterActiveAge"
    aws-msk-cluster                               = "tmod:@turbot/aws-msk#/policy/types/clusterActiveAge"
    aws-neptune-dbCluster                         = "tmod:@turbot/aws-neptune#/policy/types/dbClusterActiveAge"
    aws-neptune-dbInstance                        = "tmod:@turbot/aws-neptune#/policy/types/dbInstanceActiveAge"
    aws-qldb-ledger                               = "tmod:@turbot/aws-qldb#/policy/types/ledgerActiveAge"
    aws-rds-dbCluster                             = "tmod:@turbot/aws-rds#/policy/types/dbClusterActiveAge"
    aws-rds-dbClusterParameterGroup               = "tmod:@turbot/aws-rds#/policy/types/dbClusterParameterGroupActiveAge"
    aws-rds-dbClusterSnapshotManual               = "tmod:@turbot/aws-rds#/policy/types/dbClusterSnapshotManualActiveAge"
    aws-rds-dbInstance                            = "tmod:@turbot/aws-rds#/policy/types/dbInstanceActiveAge"
    aws-rds-dbParameterGroup                      = "tmod:@turbot/aws-rds#/policy/types/dbParameterGroupActiveAge"
    aws-rds-dbSnapshotManual                      = "tmod:@turbot/aws-rds#/policy/types/dbSnapshotManualActiveAge"
    aws-rds-optionGroup                           = "tmod:@turbot/aws-rds#/policy/types/optionGroupActiveAge"
    aws-rds-subnetGroup                           = "tmod:@turbot/aws-rds#/policy/types/subnetGroupActiveAge"
    aws-redshift-cluster                          = "tmod:@turbot/aws-redshift#/policy/types/clusterActiveAge"
    aws-redshift-clusterParameterGroup            = "tmod:@turbot/aws-redshift#/policy/types/clusterParameterGroupActiveAge"
    aws-redshift-clusterSubnetGroup               = "tmod:@turbot/aws-redshift#/policy/types/clusterSubnetGroupActiveAge"
    aws-redshift-clusterSnapshotManual            = "tmod:@turbot/aws-redshift#/policy/types/clusterSnapshotManualActiveAge"
    aws-robomaker-fleet                           = "tmod:@turbot/aws-robomaker#/policy/types/fleetActiveAge"
    aws-robomaker-robot                           = "tmod:@turbot/aws-robomaker#/policy/types/robotActiveAge"
    aws-robomaker-robotApplication                = "tmod:@turbot/aws-robomaker#/policy/types/robotApplicationActiveAge"
    aws-route53-hostedZone                        = "tmod:@turbot/aws-route53#/policy/types/hostedZoneActiveAge"
    aws-route53resolver-resolverEndpoint          = "tmod:@turbot/aws-route53resolver#/policy/types/resolverEndpointActiveAge"
    aws-route53resolver-resolverRule              = "tmod:@turbot/aws-route53resolver#/policy/types/resolverRuleActiveAge"
    aws-s3-bucket                                 = "tmod:@turbot/aws-s3#/policy/types/bucketActiveAge"
    aws-secretsmanager-secret                     = "tmod:@turbot/aws-secretsmanager#/policy/types/secretActiveAge"
    aws-shield-protection                         = "tmod:@turbot/aws-shield#/policy/types/protectionActiveAge"
    aws-sns-subscription                          = "tmod:@turbot/aws-sns#/policy/types/subscriptionActiveAge"
    aws-sns-topic                                 = "tmod:@turbot/aws-sns#/policy/types/topicActiveAge"
    aws-sqs-queue                                 = "tmod:@turbot/aws-sqs#/policy/types/queueActiveAge"
    aws-ssm-association                           = "tmod:@turbot/aws-ssm#/policy/types/associationActiveAge"
    aws-ssm-document                              = "tmod:@turbot/aws-ssm#/policy/types/documentActiveAge"
    aws-ssm-maintenanceWindow                     = "tmod:@turbot/aws-ssm#/policy/types/maintenanceWindowActiveAge"
    aws-ssm-ssmParameter                          = "tmod:@turbot/aws-ssm#/policy/types/ssmParameterActiveAge"
    aws-stepfunctions-stateMachine                = "tmod:@turbot/aws-stepfunctions#/policy/types/stateMachineActiveAge"
    aws-swf-domain                                = "tmod:@turbot/aws-swf#/policy/types/domainActiveAge"
    aws-vpc-connect-customerGateway               = "tmod:@turbot/aws-vpc-connect#/policy/types/customerGatewayActiveAge"
    aws-vpc-core-dhcpOptions                      = "tmod:@turbot/aws-vpc-core#/policy/types/dhcpOptionsActiveAge"
    aws-vpc-internet-egressOnlyInternetGateway    = "tmod:@turbot/aws-vpc-internet#/policy/types/egressOnlyInternetGatewayActiveAge"
    aws-vpc-internet-elasticIp                    = "tmod:@turbot/aws-vpc-internet#/policy/types/elasticIpActiveAge"
    aws-vpc-internet-vpcEndpoint                  = "tmod:@turbot/aws-vpc-internet#/policy/types/vpcEndpointActiveAge"
    aws-vpc-internet-vpcEndpointService           = "tmod:@turbot/aws-vpc-internet#/policy/types/vpcEndpointServiceActiveAge"
    aws-vpc-security-flowLog                      = "tmod:@turbot/aws-vpc-security#/policy/types/flowLogActiveAge"
    aws-vpc-internet-internetGateway              = "tmod:@turbot/aws-vpc-internet#/policy/types/internetGatewayActiveAge"
    aws-vpc-internet-natGateway                   = "tmod:@turbot/aws-vpc-internet#/policy/types/natGatewayActiveAge"
    aws-vpc-security-networkAcl                   = "tmod:@turbot/aws-vpc-security#/policy/types/networkAclActiveAge"
    aws-vpc-connect-vpcPeeringConnection          = "tmod:@turbot/aws-vpc-connect#/policy/types/vpcPeeringConnectionActiveAge"
    aws-vpc-core-routeTable                       = "tmod:@turbot/aws-vpc-core#/policy/types/routeTableActiveAge"
    aws-vpc-security-securityGroup                = "tmod:@turbot/aws-vpc-security#/policy/types/securityGroupActiveAge"
    aws-vpc-core-subnet                           = "tmod:@turbot/aws-vpc-core#/policy/types/subnetActiveAge"
    aws-vpc-connect-transitGateway                = "tmod:@turbot/aws-vpc-connect#/policy/types/transitGatewayActiveAge"
    aws-vpc-connect-transitGatewayRouteTable      = "tmod:@turbot/aws-vpc-connect#/policy/types/transitGatewayRouteTableActiveAge"
    aws-vpc-core-vpc                              = "tmod:@turbot/aws-vpc-core#/policy/types/vpcActiveAge"
    aws-vpc-connect-vpnConnection                 = "tmod:@turbot/aws-vpc-connect#/policy/types/vpnConnectionActiveAge"
    aws-vpc-connect-vpnGateway                    = "tmod:@turbot/aws-vpc-connect#/policy/types/vpnGatewayActiveAge"
    aws-waf-ipSet                                 = "tmod:@turbot/aws-waf#/policy/types/ipSetActiveAge"
    aws-waf-ipSetV2Global                         = "tmod:@turbot/aws-waf#/policy/types/ipSetV2GlobalActiveAge"
    aws-waf-ipSetV2Regional                       = "tmod:@turbot/aws-waf#/policy/types/ipSetV2RegionalActiveAge"
    aws-waf-rateBasedRule                         = "tmod:@turbot/aws-waf#/policy/types/rateBasedRuleActiveAge"
    aws-waf-regexPatternSetV2Global               = "tmod:@turbot/aws-waf#/policy/types/regexPatternSetV2GlobalActiveAge"
    aws-waf-regexPatternSetV2Regional             = "tmod:@turbot/aws-waf#/policy/types/regexPatternSetV2RegionalActiveAge"
    aws-waf-rule                                  = "tmod:@turbot/aws-waf#/policy/types/ruleActiveAge"
    aws-waf-ruleGroupV2Global                     = "tmod:@turbot/aws-waf#/policy/types/ruleGroupV2GlobalActiveAge"
    aws-waf-ruleGroupV2Regional                   = "tmod:@turbot/aws-waf#/policy/types/ruleGroupV2RegionalActiveAge"
    aws-waf-webacl                                = "tmod:@turbot/aws-waf#/policy/types/webaclActiveAge"
    aws-waf-webAclV2Global                        = "tmod:@turbot/aws-waf#/policy/types/webAclV2GlobalActiveAge"
    aws-waf-webAclV2Regional                      = "tmod:@turbot/aws-waf#/policy/types/webAclV2RegionalActiveAge"
    aws-wafregional-rule                          = "tmod:@turbot/aws-wafregional#/policy/types/ruleActiveAge"
    aws-wellarchitected-workload                  = "tmod:@turbot/aws-wellarchitected#/policy/types/workloadActiveAge"
}