variable "mod_list" {
    description = <<DESC
  Map of the list of approved regions controls.

  Possible values for the key of this map is found in locals.tf defined in the local variable policy_map.
  For example `aws-acm-certificate : "tmod:@turbot/aws-acm#/policy/types/certificateApproved"` has key `aws-acm-certificate`.

  The value of the map is one of these possible values:
    - "Skip"
    - "Check: Approved"
    - "Enforce: Delete unapproved if new"

  Check demo.tfvars for an example of how to set this value.

  NOTE: Default behaviour is to approve all services which means expecting all mods to be installed
  DESC
  type = list(string)
  default = [
    "aws",
    "aws-acm",
    "aws-amplify",
    "aws-apigateway",
    "aws-appflow",
    "aws-appmesh",
    "aws-appstream",
    "aws-appsync",
    "aws-artifact",
    "aws-athena",
    "aws-backup",
    "aws-batch",
    "aws-chime",
    "aws-cisv1",
    "aws-cloud9",
    "aws-cloudformation",
    "aws-cloudfront",
    "aws-cloudhsm",
    "aws-cloudsearch",
    "aws-cloudtrail",
    "aws-cloudwatch",
    "aws-codebuild",
    "aws-codecommit",
    "aws-codedeploy",
    "aws-codepipeline",
    "aws-codestar",
    "aws-comprehend",
    "aws-config",
    "aws-datapipeline",
    "aws-dax",
    "aws-directoryservice",
    "aws-dms",
    "aws-docdb",
    "aws-dynamodb",
    "aws-ec2",
    "aws-ecr",
    "aws-ecs",
    "aws-efs",
    "aws-eks",
    "aws-elasticache",
    "aws-elasticbeanstalk",
    "aws-elasticsearch",
    "aws-elastictranscoder",
    "aws-emr",
    "aws-events",
    "aws-fsx",
    "aws-gamelift",
    "aws-glacier",
    "aws-glue",
    "aws-greengrass",
    "aws-guardduty",
    "aws-health",
    "aws-iam",
    "aws-inspector",
    "aws-iot",
    "aws-iot1click",
    "aws-iotanalytics",
    "aws-iotevents",
    "aws-iotsitewise",
    "aws-iotthingsgraph",
    "aws-kinesis",
    "aws-kms",
    "aws-lambda",
    "aws-lex",
    "aws-lightsail",
    "aws-logs",
    "aws-machinelearning",
    "aws-macie",
    "aws-mediaconnect",
    "aws-mediaconvert",
    "aws-medialive",
    "aws-mediapackage",
    "aws-mediastore",
    "aws-mediatailor",
    "aws-mq",
    "aws-msk",
    "aws-neptune",
    "aws-outposts",
    "aws-qldb",
    "aws-quicksight",
    "aws-ram",
    "aws-rds",
    "aws-redshift",
    "aws-resourcegroups",
    "aws-robomaker",
    "aws-route53",
    "aws-route53domains",
    "aws-route53resolver",
    "aws-s3",
    "aws-sagemaker",
    "aws-secretsmanager",
    "aws-securityhub",
    "aws-serverlessapplicationrepository",
    "aws-servermigration",
    "aws-servicecatalog",
    "aws-ses",
    "aws-shield",
    "aws-simpledb",
    "aws-snowball",
    "aws-sns",
    "aws-sqs",
    "aws-ssm",
    "aws-stepfunctions",
    "aws-storagegateway",
    "aws-swf",
    "aws-textract",
    "aws-transcribe",
    "aws-transfer",
    "aws-trustedadvisor",
    "aws-vpc-core",
    "aws-vpc-connect",
    "aws-vpc-internet",
    "aws-vpc-security",
    "aws-waf",
    "aws-wafregional",
    "aws-wellarchitected",
    "aws-workdocs",
    "aws-workspaces",
    "aws-xray"
  ]
}

variable "turbot_profile" {
  type        = string
  description = "Turbot profile for the workspace where this terraform code will be executed"
}