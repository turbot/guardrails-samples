title: AWS S3 - Approved Usage - Enforce static website hosting is associated with CloudFront
useCase: |
  This control is specifically for the Static Website Buckets. 
  End-users should not be able to directly access the S3 bucket endpoint.
  A static hosted S3 bucket must be associated with a CloudFront distribution.
  In addition, that CloudFront distribution needs to enforce that access to the website uses the protocol HTTPS 
  only.
details: |
  Provides a Terraform configuration for creating a smart folder and applying a calculated policy on the 
  `AWS> S3> Bucket> Tags> Template`.
  The Calculated policy creates a tag template.
  The template shows creating static and dynamic values.
  It also shows how to control the values of tags on a bucket.
templateInput:
  details: |
    The query below is a two fold query, which functions as a JOIN in SQL. 
    Initially, get the name of the current S3 bucket. 
    Using this bucket name, do a subsequent query to get the associated CloudFront distribution using the 
    bucket name as a part of the lookup key.
  query: |
    - | 
      {
        item: bucket {
          Name
        }
      }
    - |
      {
        resources(filter: "$.DistributionConfig.Origins.Items.*.DomainName:'{{ $.item.Name }}.s3.amazonaws.com' resourceTypeId:tmod:@turbot/aws-cloudfront#/resource/types/cloudFront")
        {
          items {
            ViewerProtocolPolicy: get(path:"DistributionConfig.ViewerProtocolPolicy.ViewerProtocolPolicy")
            CacheBehaviorsItems: get(path:"DistributionConfig.CacheBehaviors.Items")
          }
        }
        item: bucket {
          Website: get(path:"Website")
        }
      }
template:
  details: |
    Initially set the policy value to `Approved` to allow for normal S3 bucket usage. 
    If the S3 bucket is configured as a static website then we need to do some additional checks.

    The code checks to see that the default cache behaviour has a viewer protocol policy that is set to HTTPS usage and 
    will not allow HTTP usage.
    If not, then we set the policy to `Not approved`.

    Then next section will check to see that the addition cache behaviour has a viewer protocol policy that is set to 
    HTTPS usage and will not allow HTTP usage.
    If not, then we set the policy to `Not approved`.

    Otherwise the S3 bucket will be `Approved`.
  source: |
    {#- Always approved if static website hosting is disabled -#}
    {%- set policyValue = "Approved" -%}

    {#- Is static website hosting is enabled -#}
    {%- if $.item.Website -%}

      {%- for item in $.resources.items -%}

        {#- Check if the the default cache behaviour is not secure, if not then `Not approved`-#}
        {%- if item.ViewerProtocolPolicy not in ["redirect-to-https", "https-only"] -%}
          {#- Unapproved if an associated CloudFront distribution is set to http -#}
          {%- set policyValue = "Not approved" -%}
        {%- else -%}

          {#- Check if the the other cache behaviour is not secure, if not then `Not approved`-#}
          {%- for behaviorsItem in item.CacheBehaviorsItems -%}
            {%- if behaviorsItem.ViewerProtocolPolicy not in ["redirect-to-https", "https-only"] -%}
              {%- set policyValue = "Not approved" -%}
            {%- endif -%}
          {%- endfor -%}

        {%- endif -%}
      {%- else -%}
        {#- Unapproved if there is no associated CloudFront distribution -#}
        {%- set policyValue = "Not approved" -%}
      {%- endfor -%}

    {%- endif -%}

    {{ policyValue }}
