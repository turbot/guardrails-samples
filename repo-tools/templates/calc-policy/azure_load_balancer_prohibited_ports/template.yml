title: Azure Networking - Prevent unapproved network configuration for load balancers
useCase: |
  The cloud operations team would like to ensure that they can detect if any load balancers exist that allow 
  communication on known non-encrypted ports (e.g. FTP/21, HTTP/80 and SMTP/25).
details: |
  This Terraform configuration for creating a smart folder and applying the 
  `Azure > Load Balancer > Load Balancer > Approved` to "Check: Approved" and a calculated policy on 
  `Azure > Load Balancer > Load Balancer > Approved > Usage`.
  The Calculated policy sets the value to "Unapproved" when one of the specified ports are present in the NAT or Load 
  Balancer front end or back end rules and sets the value "Approved" otherwise.
templateInput:
  details: |
    In this case the query selects all of the front end and back end port values from the NAT and Load Balancer rules.
  query: |
    {
      resource {
        natrules: get(path: "inboundNatRules")
        lbr: get(path: "loadBalancingRules")
      }
    }
template:
  source: |
    {% set badPorts = [80,21,25] %}{# editable array of ports to be blocked #}
    {% set badPortFound = "False" %}
    {%- for item in $.resource.natrules%}
      {% if item.backendPort in badPorts or item.frontendPort in badPorts%}
        {% set badPortFound = "True" %} 
      {% endif %}
    {% endfor %}
    {%- for item in $.resource.lbr%}
      {% if item.backendPort in badPorts or item.frontendPort in badPorts%}
        {% set badPortFound = "True" %} 
      {% endif %}
    {% endfor %}
    {% if badPortFound == "True" %} 
      "Not approved"
    {% else %}
      "Approved"
    {% endif %}
