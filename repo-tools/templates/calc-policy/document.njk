# {{ configuration.resource }} - {{ configuration.description }}

## Use case

{{ configuration.useCase | safe }}
## Implementation Details
{% if configuration.policies | length > 1 %}
This Terraform template creates a smart folder and applies calculated policies on the policies:
{% else %}
This Terraform template creates a smart folder and applies the calculated policy on the policy:
{% endif %}

{%- for policy in configuration.policies %}
- `{{ policy | safe }}`
{%- endfor %}

{{ configuration.details | safe }}
### Template Input (GraphQL)

The template input to a calculated policy is a GraphQL query.

{{ configuration.templateInput.details | safe }}

{%- if configuration.templateInput.query | isString %}
```graphql
{{ configuration.templateInput.query | trim | safe }}
```
{% elif configuration.templateInput.query | isArray %}
{%- for query in configuration.templateInput.query %}
```graphql
{{ query | safe | trim }}
```
{% endfor %}
{%- endif %}
### Template (Nunjucks)
{%- if configuration.template.details %}

{{ configuration.template.details | safe | trim }}
{%- endif %}

{%- if configuration.template.source | isString %}

```nunjucks
{{ configuration.template.source | trim | safe }}
```
{% elif configuration.template.source | isArray %}
{% for source in configuration.template.source %}
```nunjucks
{{ source | safe | trim }}
```
{% endfor %}
{%- endif %}
The template itself is a [Nunjucks formatted template](https://mozilla.github.io/nunjucks/templating.html).

## Prerequisites

To run Turbot Calculated Policies, you must install:

- [Terraform](https://www.terraform.io) Version 12
- [Turbot Terraform Provider](https://turbot.com/v5/docs/reference/terraform/provider)
- Configured credentials to connect to your Turbot workspace

### Configuring Credentials

You must set your `config.tf` or environment variables to connect to your Turbot workspace.
Further information can be found in the Turbot Terraform Provider [Installation Instructions](https://turbot.com/v5/docs/reference/terraform/provider).

## Running the Example

Scripts can be run in the folder that contains the script.

### Configure the script

Update [default.tfvars](default.tfvars) or create a new Terraform configuration file.

Variables that are exposed by this script are:

{% for variable in variables -%}
- {{ variable.name }}{% if variable.mandatory == false %} (Optional){% endif %}
{% endfor %}
Open the file [variables.tf](variables.tf) for further details.

### Initialize Terraform

If not previously run then initialize Terraform to get all necessary providers.

Command: `terraform init`

### Apply using default configuration

If seeking to apply the configuration using the configuration file [defaults.tfvars](defaults.tfvars).

Command: `terraform apply -var-file=default.tfvars`

### Apply using custom configuration

If seeking to apply the configuration using a custom configuration file `<custom_filename>.tfvars`.

Command: `terraform apply -var-file=<custom_filename>.tfvars`

### Destroy using default configuration

If seeking to apply the configuration using the configuration file [defaults.tfvars](defaults.tfvars).

Command: `terraform destroy -var-file=default.tfvars`

### Destroy using custom configuration

If seeking to apply the configuration using a custom configuration file `<custom_filename>.tfvars`.

Command: `terraform destroy -var-file=<custom_filename>.tfvars`
